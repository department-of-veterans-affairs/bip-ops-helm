#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         /dev/log local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  forwardfor        except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout                 http-request      10s
    timeout                 queue             1m
    timeout                 connect           10s
    timeout                 client            1m
    timeout                 server            1m
    timeout                 http-keep-alive   10s
    timeout                 check             10s
    maxconn                 3000

frontend main
  mode http
  bind :80
  bind :443 ssl crt /etc/haproxy/combined.pem

  # Redirect http to http/s
  http-request redirect scheme https code 301 unless { ssl_fc }

  # Let the backend server know what protocol was used.
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  http-request set-header X-Forwarded-Proto http if !{ ssl_fc }

  # Preserve the Host header for redirects (looking at you, wlconsole)
  http-send-name-header Host

  # Add WL-Proxy header(s)
  http-request set-header WL-Proxy-SSL true if { ssl_fc }

  # Use default (static) backend
  default_backend static

  ###
  # Shared Resources
  ###

  # OEM
  #acl oem path_beg /em/
  acl oem hdr_dom(host) oem
  use_backend oem if oem

  ###
  # Single depth domain criteria
  ###

  # Production
  acl prd-awards if hdr_dom(host) prd-awards
  acl prd-core if hdr_dom(host) prd-core
  acl prd-haz if hdr_dom(host) prd-haz
  acl prd-rating if hdr_dom(host) prd-rating
  acl prd-res if hdr_dom(host) prd-res
  acl prd-spring if hdr_dom(host) prd-spring
  # ProdTest
  acl prdtst-awards if hdr_dom(host) prdtst-awards
  acl prdtst-core if hdr_dom(host) prdtst-core
  acl prdtst-haz if hdr_dom(host) prdtst-haz
  acl prdtst-rating if hdr_dom(host) prdtst-rating
  acl prdtst-res if hdr_dom(host) prdtst-res
  acl prdtst-spring if hdr_dom(host) prdtst-spring
  # Pre-Production
  acl pre-awards if hdr_dom(host) pre-awards
  acl pre-core if hdr_dom(host) pre-core
  acl pre-haz if hdr_dom(host) pre-haz
  acl pre-rating if hdr_dom(host) pre-rating
  acl pre-res if hdr_dom(host) pre-res
  acl pre-spring if hdr_dom(host) pre-spring
  # Perf
  acl perf-awards if hdr_dom(host) perf-awards
  acl perf-core if hdr_dom(host) perf-core
  acl perf-haz if hdr_dom(host) perf-haz
  acl perf-rating if hdr_dom(host) perf-rating
  acl perf-res if hdr_dom(host) perf-res
  acl perf-spring if hdr_dom(host) perf-spring
  # COLA
  acl cola-awards if hdr_dom(host) cola-awards
  acl cola-core if hdr_dom(host) cola-core
  acl cola-haz if hdr_dom(host) cola-haz
  acl cola-rating if hdr_dom(host) cola-rating
  acl cola-res if hdr_dom(host) cola-res
  acl cola-spring if hdr_dom(host) cola-spring

  ###
  # Set backends
  ###
  use_backend prd-awards if prd-awards
  use_backend prd-core if prd-core
  use_backend prd-haz if prd-haz
  use_backend prd-rating if prd-rating
  use_backend prd-res if prd-res
  use_backend prd-spring if prd-spring

  use_backend prdtst-awards if prdtst-awards
  use_backend prdtst-core if prdtst-core
  use_backend prdtst-haz if prdtst-haz
  use_backend prdtst-rating if prdtst-rating
  use_backend prdtst-res if prdtst-res
  use_backend prdtst-spring if prdtst-spring

  use_backend pre-awards if pre-awards
  use_backend pre-core if pre-core
  use_backend pre-haz if pre-haz
  use_backend pre-rating if pre-rating
  use_backend pre-res if pre-res
  use_backend pre-spring if pre-spring

  use_backend perf-awards if perf-awards
  use_backend perf-core if perf-core
  use_backend perf-haz if perf-haz
  use_backend perf-rating if perf-rating
  use_backend perf-res if perf-res
  use_backend perf-spring if perf-spring

  use_backend cola-awards if cola-awards
  use_backend cola-core if cola-core
  use_backend cola-haz if cola-haz
  use_backend cola-rating if cola-rating
  use_backend cola-res if cola-res
  use_backend cola-spring if cola-spring

###
# Default Backend
###
backend static
  server static1 localhost:1280

###
# Shared Backends
###
backend oem
  server oem1 10.247.67.214:7802 maxconn 20 ssl verify none

###
# Environment Backends
###

# Production
backend prd-awards
  server prd-awards1 vbmsa000.prd.vbms.vba.va.gov:7001 maxconn 20
backend prd-core
  server prd-core1 vbms000.prd.vbms.vba.va.gov:7001 maxconn 20
backend prd-haz
  server prd-haz1 haz000.prd.vbms.vba.va.gov:8001 maxconn 20
backend prd-rating
  server prd-rating1 vbmsr000.prd.vbms.vba.va.gov:7001 maxconn 20
backend prd-res
  server prd-res1 vbmsr001.prd.vbms.vba.va.gov:9101 maxconn 20
backend prd-spring
  server prd-spring1 microsvc001.prd.vbms.vba.va.gov:8100 ssl verify none maxconn 20

# ProdTest
backend prdtst-awards
  server prdtst-awards1 vbmsa000.prdtst.vbms.vba.va.gov:7001 maxconn 20
backend prdtst-core
  server prdtst-core1 vbms000.prdtst.vbms.vba.va.gov:7001 maxconn 20
backend prdtst-haz
  server prdtst-haz1 haz000.prdtst.vbms.vba.va.gov:8001 maxconn 20
backend prdtst-rating
  server prdtsts-rating1 vbmsr000.prdtst.vbms.vba.va.gov:7001 maxconn 20
backend prdtst-res
  server prdtst-res1 vbmsr001.prdtst.vbms.vba.va.gov:9101 maxconn 20
backend prdtst-spring
  server prdtst-spring1 microsvc001.prdtst.vbms.vba.va.gov:8100 ssl verify none maxconn 20

# Pre-Production
backend pre-awards
  server pre-awards1 vbmsa000.pre.vbms.vba.va.gov:7001 maxconn 20
backend pre-core
  server pre-core1 vbms000.pre.vbms.vba.va.gov:7001 maxconn 20
backend pre-haz
  server pre-haz1 haz000.pre.vbms.vba.va.gov:8001 maxconn 20
backend pre-rating
  server pre-rating1 vbmsr000.pre.vbms.vba.va.gov:7001 maxconn 20
backend pre-res
  server pre-res1 vbmsr001.pre.vbms.vba.va.gov:9101 maxconn 20
backend pre-spring
  server pre-spring1 microsvc001.pre.vbms.vba.va.gov:8100 ssl verify none maxconn 20

# Perf
backend perf-awards
  server perf-awards1 vbmsa000.perf.vbms.vba.va.gov:7001 maxconn 20
backend perf-core
  server perf-core1 vbms000.perf.vbms.vba.va.gov:7001 maxconn 20
backend perf-haz
  server perf-haz1 haz000.perf.vbms.vba.va.gov:8001 maxconn 20
backend perf-rating
  server perf-rating1 vbmsr000.perf.vbms.vba.va.gov:7001 maxconn 20
backend perf-res
  server perf-res1 vbmsr001.perf.vbms.vba.va.gov:9101 maxconn 20
backend perf-spring
  server perf-spring1 microsvc001.perf.vbms.vba.va.gov:8100 ssl verify none maxconn 20

# COLA
backend cola-awards
  server cola-awards1 vbmsa000.cola.vbms.vba.va.gov:7001 maxconn 20
backend cola-core
  server cola-core1 vbms000.cola.vbms.vba.va.gov:7001 maxconn 20
backend cola-haz
  server cola-haz1 haz000.cola.vbms.vba.va.gov:8001 maxconn 20
backend cola-rating
  server cola-rating1 vbmsr000.cola.vbms.vba.va.gov:7001 maxconn 20
backend cola-res
  server cola-res1 vbmsr001.cola.vbms.vba.va.gov:9101 maxconn 20
backend cola-spring
  server cola-spring1 microsvc001.cola.vbms.vba.va.gov:8100 ssl verify none maxconn 20

# vim: ts=2:sw=2:expandtab
